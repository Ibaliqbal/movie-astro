---
import { getGenres, getSimiliarDatas, getDetail } from "@/utils/data";
import type { Movie } from "@/types/movie";
import Layout from "@/layouts/Layout.astro";
import Card from "@/components/Movie/Card.astro";
import Link from "@/components/ui/Link.astro";
import { movieListsTopic } from "@/utils/constant";
import List from "@/components/Genre/List.astro";
import FormSearch from "@/components/React/FormSearch";

export const prerender = false;

const { searchParams } = Astro.url;

const page = searchParams.get("page");

if (!page) return Astro.redirect("/");

const { id } = Astro.params;

const genreListMovies: Array<Genre> = await getGenres("movie");
const detailMovie = (await getDetail("movie", id as string)) as Movie;
const datas = await getSimiliarDatas("movie", id as string, Number(page));

const movies = datas.results.filter(
  (movie: Movie) =>
    typeof movie.poster_path === "string" &&
    typeof movie.backdrop_path === "string"
) as Movies;
---

<Layout
  description=""
  title={`Similar Movies ~ "${detailMovie.original_title}"`}
  ><section class="w-full" slot="main-sidebar">
    <h1 class="mb-3 text-xl font-bold">Movies</h1>
    <div class="px-3">
      <FormSearch type="movie" client:load />
    </div>
    <List lists={genreListMovies} type="movie" customLists={movieListsTopic} />
  </section>
  <main class="col-span-4 w-full flex flex-col gap-4">
    <h1 class="font-bold text-2xl">
      Similar Movies based "{detailMovie.original_title}"
    </h1>
    <section class="w-full mt-3 grid grid-cols-4 gap-4">
      {movies.map((movie) => <Card {...movie} />)}
    </section>
    <div class="flex w-full justify-between items-center">
      <h3 class="font-semibold text-lg">{datas.page} of {datas.total_pages}</h3>
      <div class="flex gap-6 items-center">
        {
          Number(page) === 1 || Number(page) < 0 ? null : (
            <Link
              class="px-6 py-3 bg-slate-800 rounded-md"
              href={`/movie/${id}/similar?page=${Number(page) - 1}`}
            >
              Prev
            </Link>
          )
        }
        {
          datas.total_pages > 500 ? (
            Number(page) === 500 ? null : (
              <Link
                href={`/movie/${id}/similar?page=${Number(page) + 1}`}
                class="px-6 py-3 bg-slate-800 rounded-md"
              >
                Next
              </Link>
            )
          ) : Number(page) === datas.total_pages ? null : (
            <Link
              href={`/movie/${id}/similar?page=${Number(page) + 1}`}
              class="px-6 py-3 bg-slate-800 rounded-md"
            >
              Next
            </Link>
          )
        }
      </div>
    </div>
  </main>
</Layout>
