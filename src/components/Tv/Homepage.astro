---
import type { Tv } from "@/types/tv";
import { getDiscover, getDatas, getTrendingDatas } from "@/utils/data";
import Link from "@/components/ui/Link.astro";
import Card from "./Card.astro";

type Props = {
  genreTv: number;
};

const { genreTv } = Astro.props;

const datasTrending = await getTrendingDatas("all", "day", 1);

const popularIds = new Set(
  datasTrending.results.map((movie: AllTrending) => movie.id)
);

const discover = await getDiscover("tv", genreTv, 1);
const shows_discover = discover.results
  ?.filter(
    (data: Tv) =>
      typeof data.poster_path === "string" &&
      typeof data.backdrop_path === "string"
  )
  ?.filter((data: Tv) => !popularIds.has(data.id)) as TvLists;
---

<main class="flex flex-col gap-7 mt-3">
  <section class="w-full">
    <div class="w-full flex justify-between items-center">
      <h1 class="text-2xl font-bold">Tv Lists ( Animation )</h1>
      <Link
        href={`/tv?&page=1&genre=${genreTv}`}
        class="text-blue-300 text-lg hover:text-xl transition-all duration-300 ease-linear"
        >See more</Link
      >
    </div>
    <section
      class="slider-list max-w-full overflow-x-auto flex gap-4 pb-5 items-stretch mt-4"
    >
      {
        shows_discover.map((movie) => (
          <div class="md:w-1/4 w-1/2 flex-shrink-0">
            <Card {...movie} />
          </div>
        ))
      }
    </section>
  </section>
</main>
