---
import { user } from "@/store";
import { getFavorite } from "@/lib/supabase/function";
import NavLink from "@/components/ui/NavLink.astro";
import Link from "@/components/ui/Link.astro";
import { Image } from "astro:assets";
import { format } from "date-fns";
import { getSession } from "auth-astro/server";
import Layout from "@/layouts/Layout.astro";

const { request, redirect } = Astro;

const session = await getSession(request);

if (!session) return redirect("/");

export const prerender = false;

const { searchParams } = Astro.url;

const filter = searchParams.get("filter");

if (!filter) return Astro.redirect("/");

const datas = await getFavorite(
  user.get()?.id as string,
  filter as "all" | "movie" | "tv"
);
---

<Layout title="Favorite" description="">
  <main class="w-full flex flex-col mt-8">
    <div class="flex gap-4 items-center">
      <NavLink
        href={"/favorite?filter=all"}
        customCondition={filter === "all"}
        class="bg-red-600 px-4 py-3 rounded-xl hover:shadow-lg hover:shadow-red-400 transition-all duration-200 ease-in-out"
        activeClass="bg-opacity-40">All</NavLink
      >
      <NavLink
        href={"/favorite?filter=movie"}
        customCondition={filter === "movie"}
        class="bg-red-600 px-4 py-3 rounded-xl hover:shadow-lg hover:shadow-red-400 transition-all duration-200 ease-in-out"
        activeClass="bg-opacity-40">Movies</NavLink
      >
      <NavLink
        href={"/favorite?filter=tv"}
        customCondition={filter === "tv"}
        class="bg-red-600 px-4 py-3 rounded-xl hover:shadow-lg hover:shadow-red-400 transition-all duration-200 ease-in-out"
        activeClass="bg-opacity-40">Tv Shows</NavLink
      >
    </div>
    <section class="w-full grid grid-cols-5 gap-4 mt-5">
      {
        datas.map((data) => (
          <article
            class="w-full card flex flex-col h-full rounded-md"
            transition:name={`${data.type} ${data.list_id} card`}
          >
            <Link
              href={`/${data.type}/${data.list_id}`}
              class="flex flex-col h-full"
            >
              {data.poster === undefined || data.poster === null ? (
                <div
                  class="w-full aspect-[1/1.5] bg-slate-500 bg-opacity-45 rounded-t-md"
                  transition:name={`${data.type} ${data.list_id} poster`}
                />
              ) : (
                <Image
                  src={`https://image.tmdb.org/t/p/w500${data.poster}`}
                  alt="Poster"
                  loading="eager"
                  inferSize={true}
                  class="w-full aspect-auto rounded-t-md"
                  transition:name={`${data.type} ${data.list_id} poster`}
                />
              )}

              <div class="p-3 flex-grow">
                <h1
                  transition:name={`${data.type} ${data.list_id} title`}
                  class="text-lg"
                >
                  {data.title}
                </h1>
                <p transition:name={`${data.type} ${data.list_id} date`}>
                  {format(
                    data.release_list
                      ? new Date(data.release_list)
                      : new Date(),
                    "MMMM dd, yyyy"
                  )}
                </p>
              </div>
            </Link>
          </article>
        ))
      }
    </section>
  </main>
</Layout>

<style>
  .card {
    background: rgba(255, 255, 255, 0.2);
    box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.18);
    min-height: 300px;
  }
</style>
